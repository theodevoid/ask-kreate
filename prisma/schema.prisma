// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Profile {
    userId String @id

    email            String            @unique
    username         String?           @unique
    QuestionSessions QuestionSession[]
    OverlaySettings  OverlaySettings?
}

model QuestionSession {
    id String @id @default(cuid())

    title                  String
    startDate              DateTime
    endDate                DateTime
    code                   String   @unique
    isActive               Boolean  @default(true)
    estimatedQuestionCount Int      @default(0)

    user      Profile    @relation(fields: [userId], references: [userId])
    userId    String
    createdAt DateTime   @default(now())
    questions Question[]
}

model Question {
    id String @id @default(cuid())

    body       String
    name       String?
    isArchived Boolean @default(false)
    isPinned   Boolean @default(false)
    upvotes    Int     @default(0)

    userId            String
    questionSessionId String
    questionSession   QuestionSession @relation(fields: [questionSessionId], references: [id])
    createdAt         DateTime        @default(now())

    QuestionUpvotes QuestionUpvotes[]
}

model QuestionUpvotes {
    question   Question @relation(fields: [questionId], references: [id])
    questionId String
    userId     String

    createdAt DateTime @default(now())

    @@id([questionId, userId])
}

model OverlaySettings {
    userId String  @id
    user   Profile @relation(fields: [userId], references: [userId])

    key String @unique

    @@index([key])
}
